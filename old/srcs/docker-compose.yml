version: '3.0'

# Network Bridge for Orchestrated Containers
networks:
  # Network Name for Services Using MariaDB
  network-mariadb:
    # Network Driver among Bridge, Host, None (Containers should be able to communicate)
    driver: bridge
    # Network Name (Not to Make srcs Prefix)
    name: network-mariadb
  network-nginx:
    # Network Driver among Bridge, Host, None (Containers should be able to communicate)
    driver: bridge
    # Network Name (Not to Make srcs Prefix)
    name: network-nginx


# Volumes from Host Mounted Directory for Serviced Containers
volumes:
  # Volume for MariaDB
  volume-mariadb:
    # Driver Selection among Local, Volume (Docker Volume), Temporary File System (tmpfs)
    driver: local
    # Driver Options for the Selection
    driver_opts:
      # Binding Path
      device: ${VOLPATH}/mariadb
      # Mount Option (Reference from mount Command Manual)
      o: bind
      # Volume Type
      type: volume
    # Volume Name (Not to Make srcs Prefix)
    name: volume-mariadb

  # Volume for WordPress
  volume-wordpress:
    # Driver Selection among Local, Volume (Docker Volume), Temporary File System (tmpfs)
    driver: local
    # Driver Options for the Selection
    driver_opts:
      # Binding Path
      device: ${VOLPATH}/wordpress
      # Mount Option (Reference from mount Command Manual)
      o: bind
      # Volume Type
      type: volume
    # Volume Name (Not to Make srcs Prefix)
    name: volume-wordpress

#Containers by Docker Compose 

services:
  # MariaDB Container with Service
  mariadb:
    # Dockerfile Location from Current docker-compose.yml
    build: ./requirements/mariadb/
    # Container Name as Same as Service Name
    container_name: mariadb
    # Environment Variables
    environment:
      - HOST_NAME=${HOST_NAME}
      - HOST_IPV4=${HOST_IPV4}
      - HOST_IPV6=${HOST_IPV6}
      - MARIADB_DB=${MARIADB_DB}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PWD=${MARIADB_PWD}
      - MARIADB_ADMIN_USER=${MARIADB_ADMIN_USER}
      - MARIADB_ADMIN_PWD=${MARIADB_ADMIN_PWD}
    # Image Name from Dockerfile
    image: mariadb
    # Network from Generated One with Docker Compose
    networks:
      - network-mariadb
    # Restart Policy for Keeping Service Active regardless of Any Condition
    restart: always
    # Volume to Be Independent of Container
    volumes:
      - volume-mariadb:/var/lib/mysql
  
   # Nginx Container with Service
  nginx:
    # Dockerfile Location from Current docker-compose.yml
    build: ./requirements/nginx/
    # Container Name as Same as Service Name
    container_name: nginx
    # Dependency of Service
    depends_on:
      - wordpress
    # Image Name from Dockerfile
    image: nginx
    # Network from Generated One with Docker Compose
    networks:
      - network-nginx
    # Port Forwarding to the Host OS
    ports:
      - '443:443'
    # Restart Policy for Keeping Service Active regardless of Any Condition
    restart: always
    # Volume to Be Independent of Container
    volumes:
      - volume-wordpress:/var/www/wordpress
  
  # WordPress Container with Service
  wordpress:
    # Dockerfile Location from Current docker-compose.yml
    build: ./requirements/wordpress/
    # Container Name as Same as Service Name
    container_name: wordpress
    # Dependency of Service
    depends_on:
      - mariadb
    environment:
      - WP_URL=${WP_URL}
      - WP_TITLE=${WP_TITLE}
      - WP_ADMIN_USER=${WP_ADMIN_USER}
      - WP_ADMIN_PWD=${WP_ADMIN_PWD}
      - WP_ADMIN_EMAIL=${WP_ADMIN_EMAIL}
      - WP_USER=${WP_USER}
      - WP_USER_PWD=${WP_USER_PWD}
      - WP_USER_EMAIL=${WP_USER_EMAIL}
      - MARIADB_HOST=${MARIADB_HOST}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PWD=${MARIADB_PWD}
      - MARIADB_DB=${MARIADB_DB}
    
    # Image Name from Dockerfile
    image: wordpress
    # Network from Generated One with Docker Compose
    networks:
      - network-mariadb
      - network-nginx

    # Restart Policy for Keeping Service Active regardless of Any Condition
    restart: always
    # Volume to Be Independent of Container
    volumes:
      - volume-wordpress:/var/www/wordpress